name: Django CI

on:
  pull_request:
    branches: [ "develop" ]
    paths-ignore:
      - "*/README.md"

jobs:
  build:
    env:
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEFAULT_FROM_EMAIL: parkonaft@gmail.com
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, 3.11.2]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py 
    
  push_to_dockerhub:
    if: ${{ github.event.pull_request.merged == 'true' }}
    name: Push backend image to Dockerhub
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2 
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
    - name: Login to Docker 
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2 
      with:
          push: true
          tags: kreamsandwich/parking_backend:latest 
      
  
  deploy:
    runs-on: ubuntu-latest
    needs: push_to_dockerhub
    
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_ADDRESS }}
          username: ${{ secrets.HOST_USER }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: |
            cd backend/infra/
            sudo docker compose down --rmi all
            sudo docker compose up --build -d
